<?xml version="1.0" encoding="utf-8"?>
<mx:VBox xmlns="*" xmlns:mx="http://www.adobe.com/2006/mxml" xmlns:fluint="http://www.digitalprimates.net/2008/fluint" paddingLeft="10" paddingRight="10" paddingTop="10">
	<mx:Script>
		<![CDATA[
			import net.digitalprimates.fluint.monitor.TestCaseResult;
			import net.digitalprimates.fluint.monitor.TestSuiteResult;
			import mx.collections.ArrayCollection;
			import net.digitalprimates.fluint.events.ChooseTestMethodResultEvent;
			import net.digitalprimates.fluint.monitor.TestMethodResult;
			import net.digitalprimates.fluint.monitor.TestMonitor;
			import net.digitalprimates.fluint.ui.ErrorTreeItemRenderer;
			
			[Bindable]
			protected var testMonitor:TestMonitor = TestMonitor.getInstance();
			
			protected function displayTraceInformation( selectedItem:Object ):String {
				return selectedItem.traceInformation;
			} 
			
			protected function handleTestMethodResultSelection( event:ChooseTestMethodResultEvent ):void {
				
				var collection:ArrayCollection = testMonitor.testSuiteCollection;

				var testSuiteResult:TestSuiteResult;
				var testCaseResult:TestCaseResult;
				var testMethodResult:TestMethodResult;
				for ( var i:int=0; i<collection.length; i++ ) {
					testSuiteResult = collection.getItemAt( i ) as TestSuiteResult;
					for ( var j:int=0; j<testSuiteResult.children.length; j++ ) {
						testCaseResult = testSuiteResult.children[ j ] as TestCaseResult;
						for ( var k:int=0; k<testCaseResult.children.length; k++ ) {
							testMethodResult = testCaseResult.children[ k ] as TestMethodResult;
	
							if ( event.testMethodResult == testMethodResult ) {
								testTree.expandItem( testSuiteResult, true, false, false );
								testTree.expandItem( testCaseResult, true, false, false );
								testTree.selectedItem = event.testMethodResult;
								break
							}
						}					
					}			
				}			
			}
			
			protected function applyFilter( event:Event ):void {
				switch ( testFilterGroup.selectedValue ) {
					case 'all': {
						break;
					}

					case 'pass': {
						break;
					}

					case 'fail': {
						break;
					}
				}
			}
		]]>
	</mx:Script>
	<mx:Label text="Unit and Test Integration Environment"/>
	<mx:HBox width="100%">
		<mx:Label text="Running {testMonitor.totalTestCount} Tests"/>
		<mx:Spacer width="100%"/>
		<mx:Label text="{testMonitor.totalFailureCount} Failure(s)" fontWeight="{testMonitor.totalFailureCount>0?'bold':'normal'}"/>
	</mx:HBox>
	<fluint:TestProgressBar width="100%" height="50" 
			dataProvider="{testMonitor.testSuiteCollection}" 
			numberTestCases="{testMonitor.totalTestCount}"
			chooseTestMethodResult="handleTestMethodResultSelection( event )"/>
	<mx:HRule width="100%"/>
	<mx:HDividedBox width="100%" height="100%">
		<mx:VBox width="100%" height="100%">
			<mx:Label text="Test Suites"/>
			<mx:Tree id="testTree" width="100%" height="100%" dataProvider="{testMonitor.testSuiteCollection}" itemRenderer="net.digitalprimates.fluint.ui.ErrorTreeItemRenderer"/>
			<mx:Label text="Test Result Filter"/>
			<mx:HBox width="100%">
				<mx:RadioButtonGroup id="testFilterGroup" change="applyFilter(event)"/>
				<mx:RadioButton id="all" label="All Tests" selected="true"/>
				<mx:RadioButton id="pass" label="Only Pass"/>
				<mx:RadioButton id="fail" label="Only Failure"/>
			</mx:HBox>
		</mx:VBox>
		<mx:VBox width="100%" height="100%">
			<mx:Label text="Stack Trace"/>
			<mx:TextArea width="100%" height="100%" borderStyle="none" wordWrap="false" text="{displayTraceInformation(testTree.selectedItem)}"/>
		</mx:VBox>
	</mx:HDividedBox>
</mx:VBox>
