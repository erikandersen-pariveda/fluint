<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<flexLibProperties version="1">
  <includeClasses>
    <classEntry path="flex.lang.reflect.Constructor"/>
    <classEntry path="flex.lang.reflect.Field"/>
    <classEntry path="flex.lang.reflect.Klass"/>
    <classEntry path="flex.lang.reflect.Method"/>
    <classEntry path="flex.lang.reflect.utils.MetadataTools"/>
    <classEntry path="flexunit.framework.AllFrameworkTests"/>
    <classEntry path="flexunit.framework.AsynchronousTestCase"/>
    <classEntry path="flexunit.framework.AsynchronousValueDispatcher"/>
    <classEntry path="flexunit.framework.ErrorTestCase"/>
    <classEntry path="flexunit.framework.FailureTestCase"/>
    <classEntry path="flexunit.framework.SetupErrorTearDownTestCase"/>
    <classEntry path="flexunit.framework.SetupErrorTestCase"/>
    <classEntry path="flexunit.framework.SuccessTestCase"/>
    <classEntry path="flexunit.framework.TearDownErrorTestCase"/>
    <classEntry path="flexunit.framework.TearDownTestCase"/>
    <classEntry path="flexunit.framework.TestAssert"/>
    <classEntry path="flexunit.framework.TestAsynchronous"/>
    <classEntry path="flexunit.framework.TestEventfulTestCase"/>
    <classEntry path="flexunit.framework.TestTestCase"/>
    <classEntry path="flexunit.framework.TestTestListener"/>
    <classEntry path="flexunit.framework.ValueEvent"/>
    <classEntry path="net.digitalprimates.fluint.sequence.ISequenceAction"/>
    <classEntry path="net.digitalprimates.fluint.sequence.ISequencePend"/>
    <classEntry path="net.digitalprimates.fluint.sequence.ISequenceStep"/>
    <classEntry path="net.digitalprimates.fluint.sequence.SequenceBindingWaiter"/>
    <classEntry path="net.digitalprimates.fluint.sequence.SequenceCaller"/>
    <classEntry path="net.digitalprimates.fluint.sequence.SequenceDelay"/>
    <classEntry path="net.digitalprimates.fluint.sequence.SequenceEventDispatcher"/>
    <classEntry path="net.digitalprimates.fluint.sequence.SequenceRunner"/>
    <classEntry path="net.digitalprimates.fluint.sequence.SequenceSetter"/>
    <classEntry path="net.digitalprimates.fluint.sequence.SequenceWaiter"/>
    <classEntry path="net.digitalprimates.fluint.ui.TestEnvironment"/>
    <classEntry path="net.digitalprimates.fluint.uiImpersonation.UIImpersonator"/>
    <classEntry path="net.digitalprimates.fluint.unitTests.frameworkSuite.FrameworkSuite"/>
    <classEntry path="net.digitalprimates.fluint.unitTests.frameworkSuite.testCases.TestASComponentUse"/>
    <classEntry path="net.digitalprimates.fluint.unitTests.frameworkSuite.testCases.TestAssert"/>
    <classEntry path="net.digitalprimates.fluint.unitTests.frameworkSuite.testCases.TestAsynchronous"/>
    <classEntry path="net.digitalprimates.fluint.unitTests.frameworkSuite.testCases.TestAsynchronousSetUpTearDown"/>
    <classEntry path="net.digitalprimates.fluint.unitTests.frameworkSuite.testCases.TestBeforeAfterClassOrder"/>
    <classEntry path="net.digitalprimates.fluint.unitTests.frameworkSuite.testCases.TestBeforeAfterClassOrderAsync"/>
    <classEntry path="net.digitalprimates.fluint.unitTests.frameworkSuite.testCases.TestBeforeAfterOrder"/>
    <classEntry path="net.digitalprimates.fluint.unitTests.frameworkSuite.testCases.TestBeforeAfterOrderAsync"/>
    <classEntry path="net.digitalprimates.fluint.unitTests.frameworkSuite.testCases.TestBindingUse"/>
    <classEntry path="net.digitalprimates.fluint.unitTests.frameworkSuite.testCases.TestIgnore"/>
    <classEntry path="net.digitalprimates.fluint.unitTests.frameworkSuite.testCases.TestMXMLComponentUse"/>
    <classEntry path="net.digitalprimates.fluint.unitTests.frameworkSuite.testCases.TestMethodOrder"/>
    <classEntry path="net.digitalprimates.fluint.unitTests.frameworkSuite.testCases.TestSynchronousSetUpTearDown"/>
    <classEntry path="net.digitalprimates.fluint.unitTests.frameworkSuite.testCases.mxml.SimpleMXMLLoginComponent"/>
    <classEntry path="net.digitalprimates.fluint.unitTests.frameworkSuite.testCases.valueObject.Person"/>
    <classEntry path="net.digitalprimates.fluint.unitTests.theorySuite.TheorySuite"/>
    <classEntry path="org.flexunit.Assert"/>
    <classEntry path="org.flexunit.AssertionError"/>
    <classEntry path="org.flexunit.Assume"/>
    <classEntry path="org.flexunit.ComparisonFailure"/>
    <classEntry path="org.flexunit.assertThat"/>
    <classEntry path="org.flexunit.assumeThat"/>
    <classEntry path="org.flexunit.async.Async"/>
    <classEntry path="org.flexunit.async.AsyncHandler"/>
    <classEntry path="org.flexunit.async.AsyncLocator"/>
    <classEntry path="org.flexunit.async.AsyncTestResponder"/>
    <classEntry path="org.flexunit.async.ITestResponder"/>
    <classEntry path="org.flexunit.async.TestResponder"/>
    <classEntry path="org.flexunit.events.AsyncEvent"/>
    <classEntry path="org.flexunit.events.AsyncResponseEvent"/>
    <classEntry path="org.flexunit.experimental.results.FailureList"/>
    <classEntry path="org.flexunit.experimental.results.PrintableResult"/>
    <classEntry path="org.flexunit.experimental.results.ResultMatchers"/>
    <classEntry path="org.flexunit.experimental.runners.Enclosed"/>
    <classEntry path="org.flexunit.experimental.runners.statements.AssignmentSequencer"/>
    <classEntry path="org.flexunit.experimental.runners.statements.MethodCompleteWithParamsStatement"/>
    <classEntry path="org.flexunit.experimental.runners.statements.TheoryAnchor"/>
    <classEntry path="org.flexunit.experimental.runners.statements.TheoryBlockRunner"/>
    <classEntry path="org.flexunit.experimental.runners.statements.TheoryBlockRunnerStatement"/>
    <classEntry path="org.flexunit.experimental.theories.IParameterSupplier"/>
    <classEntry path="org.flexunit.experimental.theories.IPotentialAssignment"/>
    <classEntry path="org.flexunit.experimental.theories.ParameterSignature"/>
    <classEntry path="org.flexunit.experimental.theories.ParametersSuppliedBy"/>
    <classEntry path="org.flexunit.experimental.theories.PotentialAssignment"/>
    <classEntry path="org.flexunit.experimental.theories.Theories"/>
    <classEntry path="org.flexunit.experimental.theories.internals.AllMembersSupplier"/>
    <classEntry path="org.flexunit.experimental.theories.internals.Assignments"/>
    <classEntry path="org.flexunit.experimental.theories.internals.ParameterizedAssertionError"/>
    <classEntry path="org.flexunit.experimental.theories.internals.error.CouldNotGenerateValueException"/>
    <classEntry path="org.flexunit.experimental.theories.suppliers.TestedOn"/>
    <classEntry path="org.flexunit.experimental.theories.suppliers.TestedOnSupplier"/>
    <classEntry path="org.flexunit.internals.ArrayComparisonFailure"/>
    <classEntry path="org.flexunit.internals.AssumptionViolatedException"/>
    <classEntry path="org.flexunit.internals.FlexUnitSystem"/>
    <classEntry path="org.flexunit.internals.RealSystem"/>
    <classEntry path="org.flexunit.internals.TextListener"/>
    <classEntry path="org.flexunit.internals.builders.AllDefaultPossibilitiesBuilder"/>
    <classEntry path="org.flexunit.internals.builders.FlexUnit3Builder"/>
    <classEntry path="org.flexunit.internals.builders.FlexUnit4Builder"/>
    <classEntry path="org.flexunit.internals.builders.IgnoredBuilder"/>
    <classEntry path="org.flexunit.internals.builders.IgnoredClassRunner"/>
    <classEntry path="org.flexunit.internals.builders.MetaDataBuilder"/>
    <classEntry path="org.flexunit.internals.builders.NullBuilder"/>
    <classEntry path="org.flexunit.internals.builders.SuiteMethodBuilder"/>
    <classEntry path="org.flexunit.internals.events.ExecutionCompleteEvent"/>
    <classEntry path="org.flexunit.internals.flexunit_internal"/>
    <classEntry path="org.flexunit.internals.listeners.FluintDisplayListener"/>
    <classEntry path="org.flexunit.internals.listeners.FluintDisplayListenerView"/>
    <classEntry path="org.flexunit.internals.matchers.CombinableMatcher"/>
    <classEntry path="org.flexunit.internals.matchers.Each"/>
    <classEntry path="org.flexunit.internals.matchers.IsCollectionContaining"/>
    <classEntry path="org.flexunit.internals.matchers.StringContains"/>
    <classEntry path="org.flexunit.internals.matchers.SubstringMatcher"/>
    <classEntry path="org.flexunit.internals.matchers.TypeSafeMatcher"/>
    <classEntry path="org.flexunit.internals.namespaces.classInternal"/>
    <classEntry path="org.flexunit.internals.requests.ClassRequest"/>
    <classEntry path="org.flexunit.internals.requests.FilterRequest"/>
    <classEntry path="org.flexunit.internals.requests.SortingRequest"/>
    <classEntry path="org.flexunit.internals.runners.ChildRunnerSequencer"/>
    <classEntry path="org.flexunit.internals.runners.ClassRoadie"/>
    <classEntry path="org.flexunit.internals.runners.ErrorReportingRunner"/>
    <classEntry path="org.flexunit.internals.runners.FailedBefore"/>
    <classEntry path="org.flexunit.internals.runners.FlexUnit38ClassRunner"/>
    <classEntry path="org.flexunit.internals.runners.InitializationError"/>
    <classEntry path="org.flexunit.internals.runners.MethodRoadie"/>
    <classEntry path="org.flexunit.internals.runners.MethodValidator"/>
    <classEntry path="org.flexunit.internals.runners.SuiteMethod"/>
    <classEntry path="org.flexunit.internals.runners.TestMethod"/>
    <classEntry path="org.flexunit.internals.runners.model.EachTestNotifier"/>
    <classEntry path="org.flexunit.internals.runners.model.IReflectiveCallable"/>
    <classEntry path="org.flexunit.internals.runners.model.MultipleFailureException"/>
    <classEntry path="org.flexunit.internals.runners.statements.AsyncStatementBase"/>
    <classEntry path="org.flexunit.internals.runners.statements.ExpectAsync"/>
    <classEntry path="org.flexunit.internals.runners.statements.ExpectException"/>
    <classEntry path="org.flexunit.internals.runners.statements.Fail"/>
    <classEntry path="org.flexunit.internals.runners.statements.FailOnTimeout"/>
    <classEntry path="org.flexunit.internals.runners.statements.IAsyncHandlingStatement"/>
    <classEntry path="org.flexunit.internals.runners.statements.IAsyncStatement"/>
    <classEntry path="org.flexunit.internals.runners.statements.InvokeMethod"/>
    <classEntry path="org.flexunit.internals.runners.statements.RunAfters"/>
    <classEntry path="org.flexunit.internals.runners.statements.RunAftersClass"/>
    <classEntry path="org.flexunit.internals.runners.statements.RunBefores"/>
    <classEntry path="org.flexunit.internals.runners.statements.RunBeforesClass"/>
    <classEntry path="org.flexunit.internals.runners.statements.SequencerWithDecoration"/>
    <classEntry path="org.flexunit.internals.runners.statements.StackAndFrameManagement"/>
    <classEntry path="org.flexunit.internals.runners.statements.StatementSequencer"/>
    <classEntry path="org.flexunit.matchers.FlexUnitMatchers"/>
    <classEntry path="org.flexunit.runner.Description"/>
    <classEntry path="org.flexunit.runner.Descriptor"/>
    <classEntry path="org.flexunit.runner.FlexUnitCore"/>
    <classEntry path="org.flexunit.runner.IDescribable"/>
    <classEntry path="org.flexunit.runner.IDescription"/>
    <classEntry path="org.flexunit.runner.IRequest"/>
    <classEntry path="org.flexunit.runner.IRunner"/>
    <classEntry path="org.flexunit.runner.Request"/>
    <classEntry path="org.flexunit.runner.Result"/>
    <classEntry path="org.flexunit.runner.RunnerLocator"/>
    <classEntry path="org.flexunit.runner.manipulation.Filter"/>
    <classEntry path="org.flexunit.runner.manipulation.IFilterable"/>
    <classEntry path="org.flexunit.runner.manipulation.MethodSorter"/>
    <classEntry path="org.flexunit.runner.manipulation.NoTestsRemainException"/>
    <classEntry path="org.flexunit.runner.manipulation.Sortable"/>
    <classEntry path="org.flexunit.runner.manipulation.Sorter"/>
    <classEntry path="org.flexunit.runner.notification.Failure"/>
    <classEntry path="org.flexunit.runner.notification.IAsyncStartupRunListener"/>
    <classEntry path="org.flexunit.runner.notification.IRunListener"/>
    <classEntry path="org.flexunit.runner.notification.IRunNotifier"/>
    <classEntry path="org.flexunit.runner.notification.RunListener"/>
    <classEntry path="org.flexunit.runner.notification.RunNotifier"/>
    <classEntry path="org.flexunit.runner.notification.StoppedByUserException"/>
    <classEntry path="org.flexunit.runner.notification.async.AsyncListenerWatcher"/>
    <classEntry path="org.flexunit.runner.notification.async.WaitingListener"/>
    <classEntry path="org.flexunit.runner.notification.async.XMLListener"/>
    <classEntry path="org.flexunit.runners.AllTests"/>
    <classEntry path="org.flexunit.runners.BlockFlexUnit4ClassRunner"/>
    <classEntry path="org.flexunit.runners.Parameterized"/>
    <classEntry path="org.flexunit.runners.ParentRunner"/>
    <classEntry path="org.flexunit.runners.Suite"/>
    <classEntry path="org.flexunit.runners.model.FrameworkMethod"/>
    <classEntry path="org.flexunit.runners.model.IRunnerBuilder"/>
    <classEntry path="org.flexunit.runners.model.IStatement"/>
    <classEntry path="org.flexunit.runners.model.InitializationError"/>
    <classEntry path="org.flexunit.runners.model.RunnerBuilderBase"/>
    <classEntry path="org.flexunit.runners.model.TestClass"/>
    <classEntry path="org.flexunit.token.AsyncListenersToken"/>
    <classEntry path="org.flexunit.token.AsyncTestToken"/>
    <classEntry path="org.flexunit.token.ChildResult"/>
    <classEntry path="org.flexunit.utils.ClassNameUtil"/>
    <classEntry path="org.hamcrest.AbstractMatcherTestCase"/>
    <classEntry path="org.hamcrest.BaseMatcherTest"/>
    <classEntry path="org.hamcrest.CustomMatcherTest"/>
    <classEntry path="org.hamcrest.CustomTypeSafeMatcherTest"/>
    <classEntry path="org.hamcrest.HamcrestSuite"/>
    <classEntry path="org.hamcrest.MatcherAssertTest"/>
    <classEntry path="org.hamcrest.TypeSafeMatcherTest"/>
    <classEntry path="org.hamcrest.collection.IsArrayTest"/>
    <classEntry path="org.hamcrest.collection.IsArrayWithSizeTest"/>
    <classEntry path="org.hamcrest.collection.IsCollectionContainingTest"/>
    <classEntry path="org.hamcrest.core.AllOfTest"/>
    <classEntry path="org.hamcrest.core.AnyOfTest"/>
    <classEntry path="org.hamcrest.core.DescribedAsTest"/>
    <classEntry path="org.hamcrest.core.EveryTest"/>
    <classEntry path="org.hamcrest.core.IsAnythingTest"/>
    <classEntry path="org.hamcrest.core.IsEqualTest"/>
    <classEntry path="org.hamcrest.core.IsInstanceOfTest"/>
    <classEntry path="org.hamcrest.core.IsNotTest"/>
    <classEntry path="org.hamcrest.core.IsNullTest"/>
    <classEntry path="org.hamcrest.core.IsSameTest"/>
    <classEntry path="org.hamcrest.core.ThrowsTest"/>
    <classEntry path="org.hamcrest.text.StringContainsTest"/>
    <classEntry path="org.hamcrest.text.StringEndsWithTest"/>
    <classEntry path="org.hamcrest.text.StringStartsWithTest"/>
  </includeClasses>
  <includeResources/>
  <namespaceManifests/>
</flexLibProperties>
